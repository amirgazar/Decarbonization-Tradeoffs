)
# Load the GeoJSON files
us_boundary <- st_read(us_boundary_path)
county_boundaries <- st_read(county_boundaries_path)
# Set CRS for county_boundaries if missing
if (is.na(st_crs(county_boundaries))) {
county_boundaries <- st_set_crs(county_boundaries, 4326)
}
# Calculate the reduction in total air emissions between 2025 and 2050
emissions_reduction <- emissions_data %>%
filter(Year %in% c(2025, 2050)) %>%
group_by(Facility_Unit.ID, latitude, longitude, Scenario) %>%
summarise(
total_air_emission_2025 = sum(total_air_emission_tons[Year == 2025], na.rm = TRUE),
total_air_emission_2050 = sum(total_air_emission_tons[Year == 2050], na.rm = TRUE)
) %>%
mutate(reduction = (total_air_emission_2025 - total_air_emission_2050)/1e6) %>%
filter(reduction > 0)  # Include only positive reductions
# Convert the reduction data to an sf object
emissions_reduction_sf <- st_as_sf(emissions_reduction, coords = c("longitude", "latitude"), crs = 4326)
# Define the bounding box for New England
minx <- -73.727775
miny <- 40.986561
maxx <- -66.934570
maxy <- 47.842659
# State abbreviations for labeling
state_abbr <- data.frame(
state = c('Connecticut', 'Maine', 'Massachusetts', 'New Hampshire', 'Rhode Island', 'Vermont', 'New York', 'New Jersey'),
abbr = c('CT', 'ME', 'MA', 'NH', 'RI', 'VT', 'NY', 'NJ')
)
# Calculate state centroids for labeling
state_centroids <- us_boundary %>%
filter(name %in% state_abbr$state) %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = us_boundary$name[us_boundary$name %in% state_abbr$state])
state_centroids <- left_join(state_centroids, state_abbr, by = "state")
# Define color and size scales
colors <- c("0-1" = "lightpink",     # Light pink
"1-2" = "hotpink",       # Medium pink
">2" = "#48024a")        # Dark purple
sizes <- c("0-1" = 3,                # Small bubble
"1-2" = 5,                # Medium-small bubble
">2" = 7)                # Large bubble
# Map reduction to categories and factorize
emissions_reduction_sf <- emissions_reduction_sf %>%
mutate(reduction_category = factor(case_when(
reduction <= 1 ~ "0-1",
reduction <= 2 ~ "1-2",
reduction > 2 ~ ">2"
), levels = c("0-1", "1-2", ">2")))  # Factorize to ensure all levels show up
# Function to create a reduction map for a given scenario
create_reduction_map <- function(scenario, title, boundary, min_x, max_x, min_y, max_y, centroids) {
scenario_reduction_data <- emissions_reduction_sf %>% filter(Scenario == scenario)
ggplot() +
geom_sf(data = boundary, fill = "white", color = "black") +
geom_sf(data = county_boundaries, fill = NA, color = "gray", linetype = "dashed") +
geom_sf(data = scenario_reduction_data, aes(size = reduction_category, fill = reduction_category, color = reduction_category),
shape = 21, stroke = 0.5, alpha = 0.7) +  # Filled bubbles with black border
geom_text(data = centroids, aes(X, Y, label = abbr), color = "black", size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_manual(values = colors, name = "Emission Reduction\n(million tons)") +
scale_color_manual(values = colors, guide = "none") +
scale_size_manual(values = sizes, guide = "legend", name = "Emission Reduction\n(million tons)") +
coord_sf(xlim = c(min_x, max_x), ylim = c(min_y, max_y)) +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(size = 14, hjust = 0.5, face = "bold")
) +
ggtitle(title)
}
# Create reduction maps for each scenario for New England
reduction_map_s1 <- create_reduction_map("S1", "All options pathway", us_boundary, minx, maxx, miny, maxy, state_centroids)
reduction_map_s2 <- create_reduction_map("S2", "No new transmission lines pathway", us_boundary, minx, maxx, miny, maxy, state_centroids)
reduction_map_s3 <- create_reduction_map("S3", "Offshore wind constrained pathway", us_boundary, minx, maxx, miny, maxy, state_centroids)
# Combine the reduction maps using patchwork and remove duplicate legends
combined_reduction_map <- (reduction_map_s1 + reduction_map_s2 + reduction_map_s3) +
plot_layout(guides = "collect") &
theme(legend.position = "right") &
plot_annotation(title = "Reduction in Air Emissions From Electric Utilities in New England (2050-2025)") &
theme(
plot.title = element_text(size = 14, hjust = 0.5)
)
# Print the combined reduction map
print(combined_reduction_map)
# Save the combined reduction map
save_path <- "/Users/amirgazar/Documents/GitHub/EPA_Debarbonization/R Files/Plots/Air_emissions"
ggsave(file.path(save_path, "Air_Emission_Reduction_New_England.png"), combined_reduction_map, width = 16, height = 8, bg = "transparent")
library(DiagrammeR)
grViz("
digraph fossil_fuel_health_impact {
# Set global node attributes
node [shape = box, style = filled, fontname = Helvetica, fontsize = 10]
# Main Node
FossilFuelUse [label = 'Fossil Fuel Use', color = grey, fillcolor = lightgrey, style = filled, fontsize = 12]
# Cluster for Short-Term Health Effects
subgraph cluster_short_term {
label = 'Short-Term Health Effects'
style = filled
color = lightblue
ShortTermHealthEffects [fillcolor = white, fontsize = 10]
RespiratoryIssues [label = 'Respiratory Issues', fillcolor = white]
CardiovascularProblems [label = 'Cardiovascular Problems', fillcolor = white]
PollutantExposure [label = 'Pollutant Exposure', fillcolor = white]
VulnerablePopulations [label = 'Vulnerable Populations', fillcolor = white]
}
# Cluster for Long-Term Health Effects
subgraph cluster_long_term {
label = 'Long-Term Health Effects'
style = filled
color = lightblue
LongTermHealthEffects [fillcolor = white, fontsize = 10]
ChronicDiseases [label = 'Chronic Diseases', fillcolor = white]
DevelopmentalIssues [label = 'Developmental Issues', fillcolor = white]
ClimateRelatedRisks [label = 'Climate-Related Risks', fillcolor = white]
MentalHealth [label = 'Mental Health', fillcolor = white]
}
# Cluster for Controversies & Debates
subgraph cluster_controversies {
label = 'Controversies & Debates'
style = filled
color = lightblue
ControversiesDebates [fillcolor = white, fontsize = 10]
EconomicCostsVsHealth [label = 'Economic Costs vs Health Costs', fillcolor = white]
JobLossVsCreation [label = 'Job Loss vs Job Creation', fillcolor = white]
PublicHealthPrioritization [label = 'Public Health Prioritization', fillcolor = white]
}
# Cluster for Reducing Fossil Fuel Use
subgraph cluster_reducing {
label = 'Reducing Fossil Fuel Use'
style = filled
color = lightblue
ReducingFossilFuelUse [fillcolor = white, fontsize = 10]
TransitionToRenewables [label = 'Transition to Renewables', fillcolor = white]
EnergyEfficiency [label = 'Energy Efficiency', fillcolor = white]
PolicyInitiatives [label = 'Policy Initiatives', fillcolor = white]
CostEffectiveness [label = 'Cost-Effectiveness', fillcolor = white]
}
# Define edges from the main node to clusters
FossilFuelUse -> ShortTermHealthEffects
FossilFuelUse -> LongTermHealthEffects
FossilFuelUse -> ControversiesDebates
FossilFuelUse -> ReducingFossilFuelUse
# Define edges within Short-Term Health Effects
ShortTermHealthEffects -> RespiratoryIssues
ShortTermHealthEffects -> CardiovascularProblems
ShortTermHealthEffects -> PollutantExposure
ShortTermHealthEffects -> VulnerablePopulations
# Define edges within Long-Term Health Effects
LongTermHealthEffects -> ChronicDiseases
LongTermHealthEffects -> DevelopmentalIssues
LongTermHealthEffects -> ClimateRelatedRisks
LongTermHealthEffects -> MentalHealth
# Define edges within Controversies & Debates
ControversiesDebates -> EconomicCostsVsHealth
ControversiesDebates -> JobLossVsCreation
ControversiesDebates -> PublicHealthPrioritization
# Define edges within Reducing Fossil Fuel Use
ReducingFossilFuelUse -> TransitionToRenewables
ReducingFossilFuelUse -> EnergyEfficiency
ReducingFossilFuelUse -> PolicyInitiatives
ReducingFossilFuelUse -> CostEffectiveness
# Optional: Define graph attributes for better layout
graph [layout = dot, rankdir = LR, fontsize = 10]
}
")
# Install and load visNetwork
install.packages("visNetwork")
library(visNetwork)
# Define nodes with additional styling options
nodes <- data.frame(
id = 1:17,
label = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
),
group = c(
"Main",
"Short-Term",
"Long-Term",
"Controversies",
"Reducing",
"Short-Term",
"Short-Term",
"Short-Term",
"Short-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Controversies",
"Controversies",
"Controversies",
"Reducing",
"Reducing",
"Reducing",
"Reducing"
),
title = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
)
)
# Install and load visNetwork
install.packages("visNetwork")
library(visNetwork)
# Define nodes with additional styling options
nodes <- data.frame(
id = 1:17,
label = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
),
group = c(
"Main",
"Short-Term",
"Long-Term",
"Controversies",
"Reducing",
"Short-Term",
"Short-Term",
"Short-Term",
"Short-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Controversies",
"Controversies",
"Controversies",
"Reducing",
"Reducing",
"Reducing",
"Reducing"
),
title = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
)
)
install.packages("visNetwork")
gc()
library(visNetwork)
# Define nodes with additional styling options
nodes <- data.frame(
id = 1:17,
label = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
),
group = c(
"Main",
"Short-Term",
"Long-Term",
"Controversies",
"Reducing",
"Short-Term",
"Short-Term",
"Short-Term",
"Short-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Controversies",
"Controversies",
"Controversies",
"Reducing",
"Reducing",
"Reducing",
"Reducing"
),
title = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
)
)
# Save the network to an HTML file
network <- visNetwork(nodes, edges, height = "800px", width = "100%") %>%
visGroups(groupname = "Main", color = group_colors$Main$color) %>%
visGroups(groupname = "Short-Term", color = group_colors$`Short-Term`$color) %>%
visGroups(groupname = "Long-Term", color = group_colors$`Long-Term`$color) %>%
visGroups(groupname = "Controversies", color = group_colors$Controversies$color) %>%
visGroups(groupname = "Reducing", color = group_colors$Reducing$color) %>%
visEdges(arrows = "to", color = list(color = "#848484")) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(hierarchical = TRUE) %>%
visPhysics(stabilization = FALSE)
library(visNetwork)
# Define nodes with additional styling options
nodes <- data.frame(
id = 1:20,
label = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
),
group = c(
"Main",
"Short-Term",
"Long-Term",
"Controversies",
"Reducing",
"Short-Term",
"Short-Term",
"Short-Term",
"Short-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Long-Term",
"Controversies",
"Controversies",
"Controversies",
"Reducing",
"Reducing",
"Reducing",
"Reducing"
),
title = c(
"Fossil Fuel Use",
"Short-Term Health Effects",
"Long-Term Health Effects",
"Controversies & Debates",
"Reducing Fossil Fuel Use",
"Respiratory Issues",
"Cardiovascular Problems",
"Pollutant Exposure",
"Vulnerable Populations",
"Chronic Diseases",
"Developmental Issues",
"Climate-Related Risks",
"Mental Health",
"Economic Costs vs Health Costs",
"Job Loss vs Job Creation",
"Public Health Prioritization",
"Transition to Renewables",
"Energy Efficiency",
"Policy Initiatives",
"Cost-Effectiveness"
)
)
# Define edges with connections
edges <- data.frame(
from = c(
rep(1, 4),  # Fossil Fuel Use -> 4 categories
rep(2, 4),  # Short-Term -> 4 subcategories
rep(3, 4),  # Long-Term -> 4 subcategories
rep(4, 3),  # Controversies -> 3 subcategories
rep(5, 4)   # Reducing Fossil Fuel Use -> 4 subcategories
),
to = c(
2, 3, 4, 5,
6, 7, 8, 9,
10, 11, 12, 13,
14, 15, 16,
17, 18, 19, 20
),
value = 1  # Optional: define edge weights
)
# Define group colors for better visualization
group_colors <- list(
Main = list(color = "grey"),
"Short-Term" = list(color = "lightblue"),
"Long-Term" = list(color = "lightgreen"),
Controversies = list(color = "salmon"),
Reducing = list(color = "lightyellow")
)
# Create the network with enhanced styling
visNetwork(nodes, edges, height = "800px", width = "100%") %>%
visGroups(groupname = "Main", color = group_colors$Main$color) %>%
visGroups(groupname = "Short-Term", color = group_colors$`Short-Term`$color) %>%
visGroups(groupname = "Long-Term", color = group_colors$`Long-Term`$color) %>%
visGroups(groupname = "Controversies", color = group_colors$Controversies$color) %>%
visGroups(groupname = "Reducing", color = group_colors$Reducing$color) %>%
visEdges(arrows = "to", color = list(color = "#848484")) %>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(hierarchical = TRUE) %>%
visPhysics(stabilization = FALSE)  # Disable physics for hierarchical layout
